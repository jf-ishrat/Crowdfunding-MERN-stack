{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documents/webProject/crowdfunding/src/components/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; //import { Route } from 'react-router';\n\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\nimport './Profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const [proimage, setProimage] = useState({\n    proimage: \"https://picsum.photos/200\"\n  });\n  const [url, setUrl] = useState(\"\");\n\n  const imageHandler = e => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setProimage({\n          proimage: reader.result\n        });\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n    console.log(e.target.files[0]);\n  };\n\n  const postImage = () => {\n    const imageData = new FormData();\n    imageData.append(\"file\", proimage);\n    imageData.append(\"upload_preset\", \"crowdfunding\");\n    imageData.append(\"cloud_name\", \"tumpa\");\n    fetch(\"https://api.cloudinary.com/v1_1/tumpa/image/upload\", {\n      method: \"post\",\n      body: imageData\n    }).then(res => res.json()).then(imageData => {\n      setUrl(imageData.url);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-13 col-sm-11 col-md-7 col-lg-7 col-xl-7 text-center p-0 mt-3 mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card vh-100 px-0 pt-4 pb-0 mt-3 mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"title\",\n                children: \"Upload an Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Alert, {\n                msg: errMsg,\n                type: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Alert, {\n                msg: successMsg,\n                type: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmitFile,\n                className: \"form\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"fileInput\",\n                  type: \"file\",\n                  name: \"image\",\n                  onChange: handleFileInputChange,\n                  value: fileInputState,\n                  className: \"form-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn\",\n                  type: \"submit\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), previewSource && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: previewSource,\n                alt: \"chosen\",\n                style: {\n                  height: '300px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Profile, \"D/wtSO8RZk903L2rmYcIrHVfYhY=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/ubuntu/Documents/webProject/crowdfunding/src/components/Profile.jsx"],"names":["React","useEffect","useState","NavLink","useHistory","useParams","Profile","proimage","setProimage","url","setUrl","imageHandler","e","reader","FileReader","onload","readyState","result","readAsDataURL","target","files","console","log","postImage","imageData","FormData","append","fetch","method","body","then","res","json","catch","err","errMsg","successMsg","handleSubmitFile","handleFileInputChange","fileInputState","previewSource","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n//import { Route } from 'react-router';\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\n\nimport './Profile.css'\n\n\nconst Profile = () => {\n\n    const [proimage, setProimage] = useState({\n        proimage: \"https://picsum.photos/200\"\n    })\n\n    const [url, setUrl] = useState(\"\");\n\n\n    const imageHandler = (e) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setProimage({ proimage: reader.result })\n            }\n        }\n        reader.readAsDataURL(e.target.files[0])\n        console.log(e.target.files[0]);\n    };\n\n    const postImage = () => {\n        const imageData = new FormData()\n        imageData.append(\"file\", proimage)\n        imageData.append(\"upload_preset\", \"crowdfunding\")\n        imageData.append(\"cloud_name\", \"tumpa\")\n        fetch(\"https://api.cloudinary.com/v1_1/tumpa/image/upload\", {\n            method: \"post\",\n            body: imageData\n        })\n            .then(res => res.json())\n            .then(imageData => {\n                setUrl(imageData.url);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n\n    }\n\n    return (\n        <>\n\n            <div className=\"Container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-13 col-sm-11 col-md-7 col-lg-7 col-xl-7 text-center p-0 mt-3 mb-2\">\n                        <div className=\"card vh-100 px-0 pt-4 pb-0 mt-3 mb-3\">\n\n                            <div>\n                                <h1 className=\"title\">Upload an Image</h1>\n                                <Alert msg={errMsg} type=\"danger\" />\n                                <Alert msg={successMsg} type=\"success\" />\n                                <form onSubmit={handleSubmitFile} className=\"form\">\n                                    <input\n                                        id=\"fileInput\"\n                                        type=\"file\"\n                                        name=\"image\"\n                                        onChange={handleFileInputChange}\n                                        value={fileInputState}\n                                        className=\"form-input\"\n                                    />\n                                    <button className=\"btn\" type=\"submit\">\n                                        Submit\n                                    </button>\n                                </form>\n                                {previewSource && (\n                                    <img\n                                        src={previewSource}\n                                        alt=\"chosen\"\n                                        style={{ height: '300px' }}\n                                    />\n                                )}\n                            </div>\n\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n\n\n        </>\n    );\n\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}