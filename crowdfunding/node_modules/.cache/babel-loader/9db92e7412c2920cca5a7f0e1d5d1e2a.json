{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documents/webProject/crowdfunding/src/components/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; //import { Route } from 'react-router';\n\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\nimport './Profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const [fileInputState, setFileInputState] = useState('');\n  const [previewSource, setPreviewSource] = useState('');\n  const [selectedFile, setSelectedFile] = useState();\n  const [successMsg, setSuccessMsg] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n\n  const handleFileInputChange = e => {\n    const file = e.target.files[0];\n    previewFile(file);\n    setSelectedFile(file);\n    setFileInputState(e.target.value);\n  };\n\n  const previewFile = file => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  const handleSubmitFile = e => {\n    e.preventDefault();\n    if (!selectedFile) return;\n    const reader = new FileReader();\n    reader.readAsDataURL(selectedFile);\n\n    reader.onloadend = () => {\n      uploadImage(reader.result);\n    };\n\n    reader.onerror = () => {\n      console.error('AHHHHHHHH!!');\n      setErrMsg('something went wrong!');\n    };\n  };\n\n  const uploadImage = async base64EncodedImage => {\n    try {\n      await fetch('/api/upload', {\n        method: 'POST',\n        body: JSON.stringify({\n          data: base64EncodedImage\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setFileInputState('');\n      setPreviewSource('');\n      setSuccessMsg('Image uploaded successfully');\n    } catch (err) {\n      console.error(err);\n      setErrMsg('Something went wrong!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-13 col-sm-11 col-md-7 col-lg-7 col-xl-7 text-center p-0 mt-3 mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card vh-100 px-0 pt-4 pb-0 mt-3 mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"title\",\n                children: \"Upload an Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Alert, {\n                msg: errMsg,\n                type: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Alert, {\n                msg: successMsg,\n                type: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmitFile,\n                className: \"form\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"fileInput\",\n                  type: \"file\",\n                  name: \"image\",\n                  onChange: handleFileInputChange,\n                  value: fileInputState,\n                  className: \"form-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn\",\n                  type: \"submit\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), previewSource && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: previewSource,\n                alt: \"chosen\",\n                style: {\n                  height: '300px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Profile, \"2aFhbxnEVkg4HfBquPzG980rU0o=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/ubuntu/Documents/webProject/crowdfunding/src/components/Profile.jsx"],"names":["React","useEffect","useState","NavLink","useHistory","useParams","Profile","fileInputState","setFileInputState","previewSource","setPreviewSource","selectedFile","setSelectedFile","successMsg","setSuccessMsg","errMsg","setErrMsg","handleFileInputChange","e","file","target","files","previewFile","value","reader","FileReader","readAsDataURL","onloadend","result","handleSubmitFile","preventDefault","uploadImage","onerror","console","error","base64EncodedImage","fetch","method","body","JSON","stringify","data","headers","err","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\n//import { Route } from 'react-router';\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\n\nimport './Profile.css'\n\n\nconst Profile = () => {\n\n    const [fileInputState, setFileInputState] = useState('');\n    const [previewSource, setPreviewSource] = useState('');\n    const [selectedFile, setSelectedFile] = useState();\n    const [successMsg, setSuccessMsg] = useState('');\n    const [errMsg, setErrMsg] = useState('');\n    const handleFileInputChange = (e) => {\n        const file = e.target.files[0];\n        previewFile(file);\n        setSelectedFile(file);\n        setFileInputState(e.target.value);\n    };\n\n    const previewFile = (file) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            setPreviewSource(reader.result);\n        };\n    };\n\n    const handleSubmitFile = (e) => {\n        e.preventDefault();\n        if (!selectedFile) return;\n        const reader = new FileReader();\n        reader.readAsDataURL(selectedFile);\n        reader.onloadend = () => {\n            uploadImage(reader.result);\n        };\n        reader.onerror = () => {\n            console.error('AHHHHHHHH!!');\n            setErrMsg('something went wrong!');\n        };\n    };\n\n    const uploadImage = async (base64EncodedImage) => {\n        try {\n            await fetch('/api/upload', {\n                method: 'POST',\n                body: JSON.stringify({ data: base64EncodedImage }),\n                headers: { 'Content-Type': 'application/json' },\n            });\n            setFileInputState('');\n            setPreviewSource('');\n            setSuccessMsg('Image uploaded successfully');\n        } catch (err) {\n            console.error(err);\n            setErrMsg('Something went wrong!');\n        }\n    };\n\n    return (\n        <>\n\n            <div className=\"Container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-13 col-sm-11 col-md-7 col-lg-7 col-xl-7 text-center p-0 mt-3 mb-2\">\n                        <div className=\"card vh-100 px-0 pt-4 pb-0 mt-3 mb-3\">\n\n                            <div>\n                                <h1 className=\"title\">Upload an Image</h1>\n                                <Alert msg={errMsg} type=\"danger\" />\n                                <Alert msg={successMsg} type=\"success\" />\n                                <form onSubmit={handleSubmitFile} className=\"form\">\n                                    <input\n                                        id=\"fileInput\"\n                                        type=\"file\"\n                                        name=\"image\"\n                                        onChange={handleFileInputChange}\n                                        value={fileInputState}\n                                        className=\"form-input\"\n                                    />\n                                    <button className=\"btn\" type=\"submit\">\n                                        Submit\n                                    </button>\n                                </form>\n                                {previewSource && (\n                                    <img\n                                        src={previewSource}\n                                        alt=\"chosen\"\n                                        style={{ height: '300px' }}\n                                    />\n                                )}\n                            </div>\n\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n\n\n        </>\n    );\n\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}