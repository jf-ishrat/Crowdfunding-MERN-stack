[{"/home/ubuntu/Documents/webProject/crowdfunding/src/index.js":"1","/home/ubuntu/Documents/webProject/crowdfunding/src/components/App.jsx":"2","/home/ubuntu/Documents/webProject/crowdfunding/src/components/Home.jsx":"3","/home/ubuntu/Documents/webProject/crowdfunding/src/components/SignUp.jsx":"4","/home/ubuntu/Documents/webProject/crowdfunding/src/components/Explore.jsx":"5","/home/ubuntu/Documents/webProject/crowdfunding/src/components/Footer.jsx":"6","/home/ubuntu/Documents/webProject/crowdfunding/src/components/Login.jsx":"7","/home/ubuntu/Documents/webProject/crowdfunding/src/components/StartACampaign.jsx":"8","/home/ubuntu/Documents/webProject/crowdfunding/src/components/Navbar.jsx":"9","/home/ubuntu/Documents/webProject/crowdfunding/src/components/NewPassword.jsx":"10","/home/ubuntu/Documents/webProject/crowdfunding/src/components/ResetPass.jsx":"11","/home/ubuntu/Documents/webProject/crowdfunding/src/components/CampaignDetails.jsx":"12","/home/ubuntu/Documents/webProject/crowdfunding/src/components/WhatWeDo.jsx":"13","/home/ubuntu/Documents/webProject/crowdfunding/src/reducer/UseReducer.jsx":"14","/home/ubuntu/Documents/webProject/crowdfunding/src/components/Logout.jsx":"15","/home/ubuntu/Documents/webProject/crowdfunding/src/components/HeroSection.jsx":"16","/home/ubuntu/Documents/webProject/crowdfunding/src/components/CardView.jsx":"17","/home/ubuntu/Documents/webProject/crowdfunding/src/components/Steps/BasicStep.jsx":"18","/home/ubuntu/Documents/webProject/crowdfunding/src/components/Steps/Funding.jsx":"19","/home/ubuntu/Documents/webProject/crowdfunding/src/components/Steps/Contents.jsx":"20"},{"size":707,"mtime":1622917239329,"results":"21","hashOfConfig":"22"},{"size":1954,"mtime":1624567196660,"results":"23","hashOfConfig":"22"},{"size":2070,"mtime":1624621820559,"results":"24","hashOfConfig":"22"},{"size":6078,"mtime":1622917239325,"results":"25","hashOfConfig":"22"},{"size":190,"mtime":1622917239325,"results":"26","hashOfConfig":"22"},{"size":2252,"mtime":1624564604863,"results":"27","hashOfConfig":"22"},{"size":4168,"mtime":1624611999095,"results":"28","hashOfConfig":"22"},{"size":7356,"mtime":1624615621302,"results":"29","hashOfConfig":"22"},{"size":4130,"mtime":1622919001005,"results":"30","hashOfConfig":"22"},{"size":3085,"mtime":1622917239325,"results":"31","hashOfConfig":"22"},{"size":2481,"mtime":1622917239325,"results":"32","hashOfConfig":"22"},{"size":1218,"mtime":1624626119133,"results":"33","hashOfConfig":"22"},{"size":1633,"mtime":1622917239325,"results":"34","hashOfConfig":"22"},{"size":170,"mtime":1624611999095,"results":"35","hashOfConfig":"22"},{"size":913,"mtime":1624612798431,"results":"36","hashOfConfig":"22"},{"size":388,"mtime":1622917950194,"results":"37","hashOfConfig":"22"},{"size":1250,"mtime":1624622951002,"results":"38","hashOfConfig":"22"},{"size":2512,"mtime":1624613383426,"results":"39","hashOfConfig":"22"},{"size":1761,"mtime":1624602611471,"results":"40","hashOfConfig":"22"},{"size":2540,"mtime":1624602611471,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"13sicpw",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/ubuntu/Documents/webProject/crowdfunding/src/index.js",[],["89","90"],"/home/ubuntu/Documents/webProject/crowdfunding/src/components/App.jsx",[],"/home/ubuntu/Documents/webProject/crowdfunding/src/components/Home.jsx",["91"],"/home/ubuntu/Documents/webProject/crowdfunding/src/components/SignUp.jsx",[],"/home/ubuntu/Documents/webProject/crowdfunding/src/components/Explore.jsx",[],"/home/ubuntu/Documents/webProject/crowdfunding/src/components/Footer.jsx",[],"/home/ubuntu/Documents/webProject/crowdfunding/src/components/Login.jsx",["92"],"import React, { useState, useContext } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n//import GoogleLogin from 'react-google-login';\nimport { UserContext } from './App';\n\nconst Login = () => {\n    const { state, dispatch } = useContext(UserContext);\n    const history = useHistory();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    //const [allEntry, setAllEntry] = useState([]);\n\n    const SubmitForm = async (e) => {\n        e.preventDefault();\n\n        // const newEntry = { email, password };\n        // setAllEntry([...allEntry, newEntry]);\n        // console.log(allEntry);\n        // setEmail(\"\");\n        // setPassword(\"\");\n        try {\n\n            const res = await fetch(\"/signin\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    email, password\n\n                })\n\n\n            });\n            const data = await res.json();\n            if (res.status === 400 || !data) {\n                window.alert(\"Invalid credential\");\n                console.log(\"Invalid credential\");\n            } else {\n                dispatch({ type: \"USER1\", payload: true });\n                window.alert(\"login successful\");\n                console.log(\"login successful\");\n                history.push(\"/\");\n\n            }\n\n        } catch (err) {\n            console.log(err);\n        }\n\n\n\n\n\n    }\n\n\n\n    return (\n        <>\n            <div className=\"login-form\">\n                <form method=\"post\">\n                    <h2 className=\"text-center\">Log in</h2>\n                    <div className=\"form-group\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <span className=\"fa fa-user\"></span>\n                                </span>\n                            </div>\n                            <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"email\" required=\"required\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <i className=\"fa fa-lock\"></i>\n                                </span>\n                            </div>\n                            <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" required=\"required\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" onClick={SubmitForm} className=\"btn btn-primary login-btn btn-block\">Log in</button>\n                    </div>\n                    <div className=\"clearfix\">\n\n                        <NavLink to=\"/reset-pass\" className=\"float-right\">Forgot Password?</NavLink>\n                    </div>\n                    <div className=\"or-seperator\"><i>or</i></div>\n                    <p className=\"text-center\">Login with your social media account</p>\n                    <div className=\"text-center social-btn\">\n                        <NavLink to=\"/\" className=\"btn btn-secondary\"><i className=\"fa fa-facebook\"></i>&nbsp; Facebook</NavLink>\n                        <NavLink to=\"/\" className=\"btn btn-info\"><i className=\"fa fa-twitter\"></i>&nbsp; Twitter</NavLink>\n                        <NavLink to=\"/\" className=\"btn btn-danger\"><i className=\"fa fa-google\"></i>&nbsp; Google</NavLink>\n                    </div>\n                </form>\n                <p className=\"text-center text-muted small\">Don't have an account? <NavLink to=\"/signup\">Sign up here!</NavLink></p>\n            </div>\n        </>\n    );\n};\n\nexport default Login;","/home/ubuntu/Documents/webProject/crowdfunding/src/components/StartACampaign.jsx",["93","94"],"/home/ubuntu/Documents/webProject/crowdfunding/src/components/Navbar.jsx",["95","96"],"import React,{useContext} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { UserContext } from './App';\n\nconst Navbar = () => {\n    const { state, dispatch } = useContext(UserContext);\n\n    const RenderMenu=()=>{\n        if (state){\n            return(\n                <>\n                    <li className=\"nav-item \"><NavLink aria-current=\"page\" to=\"/\" className=\"nav-link active\"></NavLink></li>\n                    <li className=\"nav-item\"><NavLink to=\"/what-we-do\" className=\"nav-link\">What We Do</NavLink></li>\n                    <li className=\"nav-item\"><NavLink to=\"/start-a-campaign\" className=\"nav-link\">Start a Campaign</NavLink></li>\n                    <li className=\"nav-item\"><NavLink to=\"/logout\" className=\"nav-link\">Logout</NavLink></li>\n\n                </>\n            )\n        }\n        else{\n            return(\n                <>\n                    <li className=\"nav-item \"><NavLink aria-current=\"page\" to=\"/\" className=\"nav-link active\"></NavLink></li>\n                    <li className=\"nav-item\"><NavLink to=\"/what-we-do\" className=\"nav-link\">What We Do</NavLink></li>\n                    <li className=\"nav-item\"><NavLink to=\"/start-a-campaign\" className=\"nav-link\">Start a Campaign</NavLink></li>\n\n\n                    <li className=\"nav-item\"><NavLink to=\"/login\" className=\"nav-link\">Login</NavLink></li>\n                    <li className=\"nav-item\"><NavLink to=\"/signup\" className=\"nav-link\">Sign Up</NavLink></li>\n                \n                </>\n            )\n        }\n    }\n    return (\n        <>\n            <div clasName=\"container-fluid nav_bg\" id=\"nav\">\n                <div className=\"row\">\n                    <div className=\"col-12 mx-auto\">\n\n                        <nav className=\"navbar navbar-expand-lg bg-dark fixed-top\" id=\"ftco-navbar\">\n                            <div className=\"container-fluid\">\n                                <NavLink className=\"navbar-brand\" to=\"/\">\n                                Crowdfunding\n                    \n                                </NavLink>\n                                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#ftco-nav\" aria-controls=\"ftco-nav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                    <span className=\"oi oi-menu\"></span> Menu\n                               </button>\n\n                                <div className=\"collapse navbar-collapse\" id=\"ftco-nav\">\n                                    <form className=\"d-flex\">\n                                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n\n                                    </form>\n                                    <ul className=\"navbar-nav ml-auto\">\n\n                                        <li className=\"nav-item dropdown\">\n                                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-expanded=\"false\">\n                                                Explore\n</a>\n\n                                            <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                                <li><a className=\"dropdown-item\" href=\"/explore\">Tech & Innovation</a></li>\n                                                <li><a className=\"dropdown-item\" href=\"/explore\">Creative Work</a></li>\n                                                <li><hr className=\"dropdown-divider\" /></li>\n                                                <li><a className=\"dropdown-item\" href=\"/explore\">Community Project</a></li>\n                                            </ul>\n                                        </li>\n\n                                        <RenderMenu/>\n\n\n\n\n                                        \n\n\n                                    </ul>\n                                </div>\n                            </div>\n                        </nav>\n                    </div>\n                </div>\n            </div>\n\n\n\n        </>\n    );\n};\n\n\nexport default Navbar;\n","/home/ubuntu/Documents/webProject/crowdfunding/src/components/NewPassword.jsx",["97","98","99"],"import React, { useState, useContext } from 'react';\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\n//import GoogleLogin from 'react-google-login';\nimport { UserContext } from './App';\n\nconst NewPassword = () => {\n\n    const history = useHistory();\n    const [password, setPassword] = useState(\"\");\n    const [cpassword, setCpassword] = useState(\"\");\n    const { token } = useParams();\n\n\n    const SubmitForm = async (e) => {\n        e.preventDefault();\n\n\n        try {\n\n            const res = await fetch(\"/new-password\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    password, cpassword, token\n\n                })\n\n\n            });\n            const data = await res.json();\n            if (res.status === 422 || !data) {\n                window.alert(data.error);\n                //console.log(\"Invalid credential\");\n            } else {\n\n                window.alert(\"reset password successful\");\n                console.log(\"reset password successful\");\n                history.push(\"/login\");\n\n            }\n\n        } catch (err) {\n            console.log(err);\n        }\n\n\n\n\n\n    }\n\n\n\n    return (\n        <>\n            <div className=\"login-form\">\n                <form method=\"post\">\n                    <h2 className=\"text-center\">Reset Password</h2>\n                    <div className=\"form-group\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <i className=\"fa fa-lock\"></i>\n                                </span>\n                            </div>\n                            <input type=\"text\" className=\"form-control\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" required=\"required\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <i className=\"fa fa-lock\"></i>\n                                    <i className=\"fa fa-check\"></i>\n                                </span>\n                            </div>\n                            <input type=\"text\" className=\"form-control\" name=\"cpassword\" value={cpassword} onChange={(e) => setCpassword(e.target.value)} placeholder=\"Confirm Password\" required=\"required\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" onClick={SubmitForm} className=\"btn btn-primary login-btn btn-block\">Reset Pass</button>\n                    </div>\n\n\n                </form>\n\n            </div>\n        </>\n    );\n};\n\nexport default NewPassword;","/home/ubuntu/Documents/webProject/crowdfunding/src/components/ResetPass.jsx",["100","101","102"],"import React, { useState, useContext } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n//import GoogleLogin from 'react-google-login';\nimport { UserContext } from './App';\n\nconst ResetPass = () => {\n    const { state, dispatch } = useContext(UserContext);\n    const history = useHistory();\n    const [email, setEmail] = useState(\"\");\n\n\n    const SubmitForm = async (e) => {\n        e.preventDefault();\n\n        // const newEntry = { email, password };\n        // setAllEntry([...allEntry, newEntry]);\n        // console.log(allEntry);\n        // setEmail(\"\");\n        // setPassword(\"\");\n        try {\n\n            const res = await fetch(\"/reset-pass\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    email\n\n                })\n\n\n            });\n            const data = await res.json();\n            if (res.status === 422 || !data) {\n                window.alert(data.error);\n                //console.log(\"Invalid credential\");\n            } else {\n\n                window.alert(\"reset pass link sen to email\");\n                console.log(\"reset pass link sen to email\");\n                history.push(\"/login\");\n\n            }\n\n        } catch (err) {\n            console.log(err);\n        }\n\n\n\n\n\n    }\n\n\n\n    return (\n        <>\n            <div className=\"login-form\">\n                <form method=\"post\">\n                    <h2 className=\"text-center\">Reset Password</h2>\n                    <div className=\"form-group\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <span className=\"fa fa-user\"></span>\n                                </span>\n                            </div>\n                            <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"email\" required=\"required\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" onClick={SubmitForm} className=\"btn btn-primary login-btn btn-block\">Reset Pass</button>\n                    </div>\n\n\n                </form>\n\n            </div>\n        </>\n    );\n};\n\nexport default ResetPass;","/home/ubuntu/Documents/webProject/crowdfunding/src/components/CampaignDetails.jsx",[],"/home/ubuntu/Documents/webProject/crowdfunding/src/components/WhatWeDo.jsx",["103","104"],"import React, { useEffect, useState } from 'react';\n//import { Route } from 'react-router';\nimport { useHistory } from 'react-router-dom';\nimport tumpa from '../images/tumpa.jpeg';\n\n\n\nconst WhatWeDo = () => {\n    const history = useHistory();\n    const [userData, setuserData] = useState({});\n    let data;\n\n    const callWhatWeDoPage = async () => {\n        try {\n            const res = await fetch('/what-we-do', {\n                method: \"GET\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                },\n                credentials: \"include\"\n\n            });\n            //console.log(res);\n\n            data = await res.json();\n            console.log(data);\n            setuserData(data);\n            console.log(userData.name);\n            console.log(userData.email);\n            //console.log(\"what we do \");\n            //console.log(data);\n            if (res.status === 401) {\n                const error = new Error(res.error);\n                throw error;\n            }\n\n        } catch (err) {\n            console.log(err);\n            history.push('/login');\n        }\n\n    }\n\n    useEffect(() => {\n        callWhatWeDoPage();\n\n    }, []);\n\n    return (\n        <>\n\n\n            <form method=\"GET\">\n                <div className=\"row \">\n                    <div className=\"col-4\">\n\n\n                    </div>\n                    <div className=\"col-6\">\n                        <h5>{userData.email}</h5>\n                    </div>\n\n                </div>\n            </form>\n\n\n\n        </>\n    );\n};\n\nexport default WhatWeDo;","/home/ubuntu/Documents/webProject/crowdfunding/src/reducer/UseReducer.jsx",[],"/home/ubuntu/Documents/webProject/crowdfunding/src/components/Logout.jsx",["105"],"import React, { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from './App';\nconst Logout = () => {\n    const { state, dispatch } = useContext(UserContext);\n    const history = useHistory();\n    useEffect(() => {\n        fetch('/logout', {\n            method: \"GET\",\n            headers: {\n                Accept: \"appllication/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            credentials: \"include\"\n        }).then((res) => {\n            dispatch({ type: \"USER1\", payload: false });\n            history.push('/', { replace: true });\n\n            if (res.status !== 200) {\n                const error = new Error(res.error);\n                throw error;\n            }\n\n        }).catch((err) => {\n            console.log(err);\n        });\n    });\n    return (\n        <>\n\n        </>\n    )\n}\n\nexport default Logout;\n","/home/ubuntu/Documents/webProject/crowdfunding/src/components/HeroSection.jsx",[],"/home/ubuntu/Documents/webProject/crowdfunding/src/components/CardView.jsx",["106"],"/home/ubuntu/Documents/webProject/crowdfunding/src/components/Steps/BasicStep.jsx",[],"/home/ubuntu/Documents/webProject/crowdfunding/src/components/Steps/Funding.jsx",[],"/home/ubuntu/Documents/webProject/crowdfunding/src/components/Steps/Contents.jsx",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":45,"column":8,"nodeType":"113","endLine":45,"endColumn":10,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":7,"column":13,"nodeType":"117","messageId":"118","endLine":7,"endColumn":18},{"ruleId":"115","severity":1,"message":"119","line":6,"column":10,"nodeType":"117","messageId":"118","endLine":6,"endColumn":17},{"ruleId":"111","severity":1,"message":"120","line":202,"column":8,"nodeType":"113","endLine":202,"endColumn":10,"suggestions":"121"},{"ruleId":"115","severity":1,"message":"122","line":6,"column":20,"nodeType":"117","messageId":"118","endLine":6,"endColumn":28},{"ruleId":"123","severity":1,"message":"124","line":59,"column":45,"nodeType":"125","endLine":59,"endColumn":173},{"ruleId":"115","severity":1,"message":"126","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":37},{"ruleId":"115","severity":1,"message":"119","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":17},{"ruleId":"115","severity":1,"message":"127","line":4,"column":10,"nodeType":"117","messageId":"118","endLine":4,"endColumn":21},{"ruleId":"115","severity":1,"message":"119","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":17},{"ruleId":"115","severity":1,"message":"116","line":7,"column":13,"nodeType":"117","messageId":"118","endLine":7,"endColumn":18},{"ruleId":"115","severity":1,"message":"122","line":7,"column":20,"nodeType":"117","messageId":"118","endLine":7,"endColumn":28},{"ruleId":"115","severity":1,"message":"128","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":13},{"ruleId":"111","severity":1,"message":"129","line":48,"column":8,"nodeType":"113","endLine":48,"endColumn":10,"suggestions":"130"},{"ruleId":"115","severity":1,"message":"116","line":5,"column":13,"nodeType":"117","messageId":"118","endLine":5,"endColumn":18},{"ruleId":"115","severity":1,"message":"131","line":3,"column":19,"nodeType":"117","messageId":"118","endLine":3,"endColumn":29},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callHomePage'. Either include it or remove the dependency array.","ArrayExpression",["134"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","React Hook useEffect has a missing dependency: 'callLoginPage'. Either include it or remove the dependency array.",["135"],"'dispatch' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useContext' is defined but never used.","'UserContext' is defined but never used.","'tumpa' is defined but never used.","React Hook useEffect has a missing dependency: 'callWhatWeDoPage'. Either include it or remove the dependency array.",["136"],"'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [callHomePage]",{"range":"143","text":"144"},"Update the dependencies array to be: [callLoginPage]",{"range":"145","text":"146"},"Update the dependencies array to be: [callWhatWeDoPage]",{"range":"147","text":"148"},[1142,1144],"[callHomePage]",[5334,5336],"[callLoginPage]",[1242,1244],"[callWhatWeDoPage]"]