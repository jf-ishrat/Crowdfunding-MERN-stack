[{"/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/index.js":"1","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/App.jsx":"2","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/Home.jsx":"3","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/StartACampaign.jsx":"4","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/Login.jsx":"5","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/Explore.jsx":"6","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/Navbar.jsx":"7","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/NewPassword.jsx":"8","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/Footer.jsx":"9","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/ResetPass.jsx":"10","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/SignUp.jsx":"11","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/WhatWeDo.jsx":"12","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/Logout.jsx":"13","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/CampaignDetails.jsx":"14","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/reducer/UseReducer.jsx":"15","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/CardView.jsx":"16","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/HeroSection.jsx":"17","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/Steps/BasicStep.jsx":"18","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/Steps/Contents.jsx":"19","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/Steps/Funding.jsx":"20"},{"size":707,"mtime":1620512944009,"results":"21","hashOfConfig":"22"},{"size":1964,"mtime":1624723325300,"results":"23","hashOfConfig":"22"},{"size":2253,"mtime":1624644188632,"results":"24","hashOfConfig":"22"},{"size":7356,"mtime":1624626405817,"results":"25","hashOfConfig":"22"},{"size":4168,"mtime":1624609808506,"results":"26","hashOfConfig":"22"},{"size":1047,"mtime":1624723240224,"results":"27","hashOfConfig":"22"},{"size":6594,"mtime":1624712386451,"results":"28","hashOfConfig":"22"},{"size":3085,"mtime":1622887624800,"results":"29","hashOfConfig":"22"},{"size":2252,"mtime":1624576028432,"results":"30","hashOfConfig":"22"},{"size":2481,"mtime":1622886788249,"results":"31","hashOfConfig":"22"},{"size":6078,"mtime":1622821646704,"results":"32","hashOfConfig":"22"},{"size":1628,"mtime":1624634405894,"results":"33","hashOfConfig":"22"},{"size":913,"mtime":1624612491434,"results":"34","hashOfConfig":"22"},{"size":14289,"mtime":1624693139084,"results":"35","hashOfConfig":"22"},{"size":170,"mtime":1624609808258,"results":"36","hashOfConfig":"22"},{"size":1137,"mtime":1624712226839,"results":"37","hashOfConfig":"22"},{"size":1869,"mtime":1624693139108,"results":"38","hashOfConfig":"22"},{"size":2512,"mtime":1624626405845,"results":"39","hashOfConfig":"22"},{"size":2540,"mtime":1624576195309,"results":"40","hashOfConfig":"22"},{"size":1761,"mtime":1624576195309,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"dobzr4",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/index.js",[],["93","94"],"/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/App.jsx",[],"/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/Home.jsx",["95"],"import React, { useEffect, useState } from 'react';\nimport '../App.css';\nimport HeroSection from './HeroSection'\nimport CardView from './CardView'\nimport { useHistory } from 'react-router-dom';\n//import { Route } from 'react-router';\n\nconst Home = () => {\n\n    const history = useHistory();\n    const [userData, setuserData] = useState([]);\n    let data;\n\n    const callHomePage = async () => {\n        try {\n            const res = await fetch('/allproject', {\n                method: \"GET\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                },\n                credentials: \"include\"\n\n            });\n            //console.log(res);\n\n            data = await res.json();\n            console.log(data.project);\n            setuserData(data.project);\n            console.log(userData)\n            if (res.status === 401) {\n                const error = new Error(res.error);\n                throw error;\n            }\n\n        } catch (err) {\n            console.log(err);\n            history.push('/login');\n        }\n\n    }\n\n    useEffect(() => {\n        callHomePage();\n\n    }, []);\n\n\n\n\n\n\n\n\n\n    return (\n        <>\n            {userData ?\n                <div className=\"mt-5\">\n                    <HeroSection />\n                    <div>\n                        <h2 style={{ \"color\": \"#ff00ff\" }}>Available Campaigns</h2>\n                    </div>\n                    <br />\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            {\n                                userData.map(item => {\n                                    return (\n                                        <>\n                                            <div className=\"col-sm\">\n                                                <CardView item={item} />\n                                            </div>\n\n\n                                        </>\n\n                                    )\n                                })\n                            }\n\n                        </div>\n                    </div>\n\n                </div>\n                : <h6>Lodding</h6>}\n\n\n        </>\n    );\n};\n\nexport default Home;\n\n","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/StartACampaign.jsx",["96","97"],"import React, { useEffect, useState } from 'react';\nimport './StartACampaign.css'\nimport BasicStep from './Steps/BasicStep';\nimport Contents from './Steps/Contents';\nimport Funding from './Steps/Funding';\nimport { NavLink, useHistory } from 'react-router-dom';\n//import { Route } from 'react-router';\n\nconst StartACampaign = () => {\n\n    const history = useHistory();\n    const [values, setValues] = useState({\n        ctitle: \"\",\n        category: \"\",\n        ctagline: \"\",\n        location: \"\",\n        tags: \"\",\n        duration: \"\",\n        story: \"\",\n        amount: \"\",\n        rnumber: \"\",\n        anumber: \"\",\n        re_anumber: \"\",\n\n    });\n\n    const [image, setImage] = useState(\"\");\n    const [url, setUrl] = useState(\"\");\n\n    const [faqList, setfaqList] = useState([\n        { question: \"\", answer: \"\" }\n\n    ]);\n    const [step, setStep] = useState(1);\n\n    const callLoginPage = async () => {\n\n        try {\n            const res = await fetch('/checklogin', {\n                method: \"GET\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                },\n                credentials: \"include\"\n\n            });\n\n            if (res.status === 401) {\n                const error = new Error(res.error);\n                throw error;\n            }\n\n        } catch (err) {\n            console.log(err);\n            history.push('/login');\n        }\n\n    }\n\n    // const postDetails=() =>{\n    //    try{\n    //     const imageData = new FormData()\n    //     imageData.append(\"file\", image)\n    //     imageData.append(\"upload_preset\", \"crowdfunding\")\n    //     imageData.append(\"cloud_name\", \"tumpa\")\n    //     const res=await fetch(\"https://api.cloudinary.com/v1_1/tumpa/image/upload\", {\n    //         method:\"POST\",\n    //         body:imageData\n    //     });\n    //    imageData = await res.json();\n    //    console.log(imageData);\n\n    //    }\n    //    catch(err){\n    //        console.log(err);\n\n    //    }\n\n    // }\n    const postDetails = () => {\n        const imageData = new FormData()\n        imageData.append(\"file\", image)\n        imageData.append(\"upload_preset\", \"crowdfunding\")\n        imageData.append(\"cloud_name\", \"tumpa\")\n        fetch(\"https://api.cloudinary.com/v1_1/tumpa/image/upload\", {\n            method: \"post\",\n            body: imageData\n        })\n            .then(res => res.json())\n            .then(imageData => {\n                setUrl(imageData.url);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n\n    }\n    const PostData = async () => {\n        //e.preventDefault();\n        try {\n\n            const { ctitle, category, ctagline, location, tags, duration,story, amount, rnumber, anumber, re_anumber } = values;\n            const res = await fetch(\"/createproject\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    ctitle, category, ctagline, location, tags, duration,story, amount, rnumber, anumber, re_anumber, faqList,url\n\n\n                })\n\n\n            });\n            const data = await res.json();\n\n            if (res.status === 201) {\n                window.alert(\"Project created\");\n                console.log(\"Project created\");\n                history.push(\"/\");\n\n            } else if (res.status === 401) {\n                const error = new Error(res.error);\n                throw error;\n            }\n            else {\n                window.alert(data.error);\n                console.log(\"project is not created\");\n            }\n\n        } catch (err) {\n            console.log(err);\n            history.push('/login');\n        }\n\n\n    }\n\n\n\n\n\n    const nextStep = () => {\n        if (step === 1) {\n            if (values.ctitle && values.category && values.ctagline && values.location && values.tags && values.duration) {\n                postDetails();\n                setStep(step + 1);\n            }\n            else {\n                window.alert(\"Please fill up the fields!\");\n            }\n\n        } else if (step === 2) {\n            if (values.story && faqList[0].question && faqList[0].answer) {\n                setStep(step + 1);\n            }\n            else {\n                window.alert(\"Please fill up the fields!\");\n            }\n\n        }\n        else if (step === 3) {\n            if (values.amount && values.rnumber && values.anumber && values.re_anumber) {\n                if (values.anumber === values.re_anumber) {\n                    // console.log(values);\n                    // console.log(faqList);\n                    PostData();\n                }\n                else {\n                    window.alert(\"Account number did not match!\");\n                }\n\n\n            }\n            else {\n                window.alert(\"Please fill up the fields!\");\n            }\n\n        }\n    };\n    const prevStep = () => {\n        if (step > 1) {\n            setStep(step - 1);\n        }\n    };\n\n    const handleChange = (name) => (e) => {\n        setValues({ ...values, [name]: e.target.value });\n    };\n\n\n\n\n    const props = { faqList, setfaqList, values, setValues, image, setImage, handleChange }\n\n\n    useEffect(() => {\n        callLoginPage();\n\n    }, []);\n\n\n\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-13 col-sm-9 col-md-7 col-lg-6 col-xl-5 text-center p-0 mt-3 mb-2\">\n                    <div className=\"card px-0 pt-4 pb-0 mt-3 mb-3\">\n                        <h2 id=\"heading\">Get Started!</h2>\n                        <p>Fill all form field to go to the next step</p>\n\n                        <div className=\"bg-light vh-200\" id=\"msform\" >\n                            <div className=\"container d-flex justify-content-center align-items-center\">\n                                <div className=\"card p-3 w-300 mt-5\">\n                                    {\n                                        {\n                                            1: <BasicStep {...props} />,\n                                            2: <Contents {...props} />,\n                                            3: <Funding handleChange={handleChange} values={values} />,\n\n                                        }[step]\n                                    }\n                                    <div className=\"d-flex justify-content-around px-5 mt-5\">\n                                        {step > 1 ? (\n                                            <button className=\"action-button-previous btn-warning\" onClick={prevStep}>\n                                                Back\n                                            </button>\n                                        ) : null}\n                                        <button className=\"action-button btn-warning\" onClick={nextStep}>\n                                            {step === 3 ? \"Submit\" : \"Next\"}\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n\n\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default StartACampaign;","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/Login.jsx",["98"],"import React, { useState, useContext } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n//import GoogleLogin from 'react-google-login';\nimport { UserContext } from './App';\n\nconst Login = () => {\n    const { state, dispatch } = useContext(UserContext);\n    const history = useHistory();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    //const [allEntry, setAllEntry] = useState([]);\n\n    const SubmitForm = async (e) => {\n        e.preventDefault();\n\n        // const newEntry = { email, password };\n        // setAllEntry([...allEntry, newEntry]);\n        // console.log(allEntry);\n        // setEmail(\"\");\n        // setPassword(\"\");\n        try {\n\n            const res = await fetch(\"/signin\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    email, password\n\n                })\n\n\n            });\n            const data = await res.json();\n            if (res.status === 400 || !data) {\n                window.alert(\"Invalid credential\");\n                console.log(\"Invalid credential\");\n            } else {\n                dispatch({ type: \"USER1\", payload: true });\n                window.alert(\"login successful\");\n                console.log(\"login successful\");\n                history.push(\"/\");\n\n            }\n\n        } catch (err) {\n            console.log(err);\n        }\n\n\n\n\n\n    }\n\n\n\n    return (\n        <>\n            <div className=\"login-form\">\n                <form method=\"post\">\n                    <h2 className=\"text-center\">Log in</h2>\n                    <div className=\"form-group\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <span className=\"fa fa-user\"></span>\n                                </span>\n                            </div>\n                            <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"email\" required=\"required\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <i className=\"fa fa-lock\"></i>\n                                </span>\n                            </div>\n                            <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" required=\"required\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" onClick={SubmitForm} className=\"btn btn-primary login-btn btn-block\">Log in</button>\n                    </div>\n                    <div className=\"clearfix\">\n\n                        <NavLink to=\"/reset-pass\" className=\"float-right\">Forgot Password?</NavLink>\n                    </div>\n                    <div className=\"or-seperator\"><i>or</i></div>\n                    <p className=\"text-center\">Login with your social media account</p>\n                    <div className=\"text-center social-btn\">\n                        <NavLink to=\"/\" className=\"btn btn-secondary\"><i className=\"fa fa-facebook\"></i>&nbsp; Facebook</NavLink>\n                        <NavLink to=\"/\" className=\"btn btn-info\"><i className=\"fa fa-twitter\"></i>&nbsp; Twitter</NavLink>\n                        <NavLink to=\"/\" className=\"btn btn-danger\"><i className=\"fa fa-google\"></i>&nbsp; Google</NavLink>\n                    </div>\n                </form>\n                <p className=\"text-center text-muted small\">Don't have an account? <NavLink to=\"/signup\">Sign up here!</NavLink></p>\n            </div>\n        </>\n    );\n};\n\nexport default Login;","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/Explore.jsx",["99","100","101"],"/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/Navbar.jsx",["102","103"],"import React, { useContext, useState, useEffect, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { UserContext } from './App';\nimport CardView from './CardView';\nimport M from 'materialize-css'\n\nconst Navbar = () => {\n    const { state, dispatch } = useContext(UserContext);\n    const [search, setSearch] = useState('')\n    const [projectDetails, setProjectDetails] = useState([])\n    const searchModal = useRef(null)\n\n    const RenderMenu = () => {\n        if (state) {\n            return (\n                <>\n                    <li className=\"nav-item \"><NavLink aria-current=\"page\" to=\"/\" className=\"nav-link active\"></NavLink></li>\n                    <li className=\"nav-item\"><NavLink to=\"/what-we-do\" className=\"nav-link\">What We Do</NavLink></li>\n                    <li className=\"nav-item\"><NavLink to=\"/start-a-campaign\" className=\"nav-link\">Start a Campaign</NavLink></li>\n                    <li className=\"nav-item\"><NavLink to=\"/logout\" className=\"nav-link\">Logout</NavLink></li>\n\n                </>\n            )\n        }\n        else {\n            return (\n                <>\n                    <li className=\"nav-item \"><NavLink aria-current=\"page\" to=\"/\" className=\"nav-link active\"></NavLink></li>\n                    <li className=\"nav-item\"><NavLink to=\"/what-we-do\" className=\"nav-link\">What We Do</NavLink></li>\n                    <li className=\"nav-item\"><NavLink to=\"/start-a-campaign\" className=\"nav-link\">Start a Campaign</NavLink></li>\n\n\n                    <li className=\"nav-item\"><NavLink to=\"/login\" className=\"nav-link\">Login</NavLink></li>\n                    <li className=\"nav-item\"><NavLink to=\"/signup\" className=\"nav-link\">Sign Up</NavLink></li>\n\n                </>\n            )\n        }\n    }\n\n\n\n    const fetchProject = (query) => {\n        setSearch(query)\n        fetch('/search-project', {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                query\n            })\n        }).then(res => res.json())\n            .then(results => {\n                setProjectDetails(results.project)\n                console.log(results.project)\n                console.log(projectDetails)\n            })\n    }\n\n\n    useEffect(() => {\n        M.Modal.init(searchModal.current)\n    }, []);\n\n\n    const clearmethod = () => {\n        setSearch('');\n        setProjectDetails([]);\n    }\n\n\n\n\n\n    return (\n        <>\n            <div clasName=\"container-fluid nav_bg\" id=\"nav\">\n                <div className=\"row\">\n                    <div className=\"col-12 mx-auto\">\n\n                        <nav className=\"navbar navbar-expand-lg bg-dark fixed-top\" id=\"ftco-navbar\">\n                            <div className=\"container-fluid\">\n                                <NavLink className=\"navbar-brand\" to=\"/\">\n                                    Crowdfunding\n\n                                </NavLink>\n                                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#ftco-nav\" aria-controls=\"ftco-nav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                    <span className=\"oi oi-menu\"></span> Menu\n                                </button>\n\n                                <div className=\"collapse navbar-collapse\" id=\"ftco-nav\">\n\n\n                                    <i data-target=\"modal1\" className=\"large material-icons modal-trigger\" >search</i>\n\n\n                                    <ul className=\"navbar-nav ml-auto\">\n\n                                        <li className=\"nav-item dropdown\">\n                                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-expanded=\"false\">\n                                                Explore\n                                            </a>\n\n                                            <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                                <li><a className=\"dropdown-item\" href=\"/explore\">Tech & Innovation</a></li>\n                                                <li><a className=\"dropdown-item\" href=\"/explore\">Creative Work</a></li>\n                                                <li><hr className=\"dropdown-divider\" /></li>\n                                                <li><a className=\"dropdown-item\" href=\"/explore\">Community Project</a></li>\n                                            </ul>\n                                        </li>\n\n                                        <RenderMenu />\n\n\n\n\n\n\n\n                                    </ul>\n                                </div>\n                            </div>\n                            <div id=\"modal1\" class=\"modal\" ref={searchModal} style={{ color: \"black\", width: \"500px\", maxHeight: \" 500px\", overflowY: \"auto\" }}>\n                                <div className=\"modal-content\">\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"search projects\"\n                                        value={search}\n                                        onChange={(e) => fetchProject(e.target.value)}\n                                    />\n\n                                    <ul className=\"collection\">\n\n                                        {\n                                            projectDetails.map(item => {\n                                                return (\n                                                    <>\n\n                                                        <li class=\"collection-item avatar\">\n\n                                                            <CardView item={item} />\n                                                        </li>\n\n                                                    </>\n\n                                                )\n                                            })\n                                        }\n\n                                    </ul>\n\n                                </div>\n                                <div className=\"modal-footer\">\n                                    <button className=\"modal-close waves-effect waves-green btn-flat\" onClick={clearmethod}>close</button>\n                                </div>\n                            </div>\n\n\n                        </nav>\n\n\n\n                    </div>\n                </div>\n            </div>\n\n\n\n        </>\n    );\n};\n\n\nexport default Navbar;","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/NewPassword.jsx",["104","105","106"],"import React, { useState, useContext } from 'react';\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\n//import GoogleLogin from 'react-google-login';\nimport { UserContext } from './App';\n\nconst NewPassword = () => {\n\n    const history = useHistory();\n    const [password, setPassword] = useState(\"\");\n    const [cpassword, setCpassword] = useState(\"\");\n    const { token } = useParams();\n\n\n    const SubmitForm = async (e) => {\n        e.preventDefault();\n\n\n        try {\n\n            const res = await fetch(\"/new-password\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    password, cpassword, token\n\n                })\n\n\n            });\n            const data = await res.json();\n            if (res.status === 422 || !data) {\n                window.alert(data.error);\n                //console.log(\"Invalid credential\");\n            } else {\n\n                window.alert(\"reset password successful\");\n                console.log(\"reset password successful\");\n                history.push(\"/login\");\n\n            }\n\n        } catch (err) {\n            console.log(err);\n        }\n\n\n\n\n\n    }\n\n\n\n    return (\n        <>\n            <div className=\"login-form\">\n                <form method=\"post\">\n                    <h2 className=\"text-center\">Reset Password</h2>\n                    <div className=\"form-group\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <i className=\"fa fa-lock\"></i>\n                                </span>\n                            </div>\n                            <input type=\"text\" className=\"form-control\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" required=\"required\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <i className=\"fa fa-lock\"></i>\n                                    <i className=\"fa fa-check\"></i>\n                                </span>\n                            </div>\n                            <input type=\"text\" className=\"form-control\" name=\"cpassword\" value={cpassword} onChange={(e) => setCpassword(e.target.value)} placeholder=\"Confirm Password\" required=\"required\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" onClick={SubmitForm} className=\"btn btn-primary login-btn btn-block\">Reset Pass</button>\n                    </div>\n\n\n                </form>\n\n            </div>\n        </>\n    );\n};\n\nexport default NewPassword;","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/Footer.jsx",[],"/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/ResetPass.jsx",["107","108","109"],"import React, { useState, useContext } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n//import GoogleLogin from 'react-google-login';\nimport { UserContext } from './App';\n\nconst ResetPass = () => {\n    const { state, dispatch } = useContext(UserContext);\n    const history = useHistory();\n    const [email, setEmail] = useState(\"\");\n\n\n    const SubmitForm = async (e) => {\n        e.preventDefault();\n\n        // const newEntry = { email, password };\n        // setAllEntry([...allEntry, newEntry]);\n        // console.log(allEntry);\n        // setEmail(\"\");\n        // setPassword(\"\");\n        try {\n\n            const res = await fetch(\"/reset-pass\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    email\n\n                })\n\n\n            });\n            const data = await res.json();\n            if (res.status === 422 || !data) {\n                window.alert(data.error);\n                //console.log(\"Invalid credential\");\n            } else {\n\n                window.alert(\"reset pass link sen to email\");\n                console.log(\"reset pass link sen to email\");\n                history.push(\"/login\");\n\n            }\n\n        } catch (err) {\n            console.log(err);\n        }\n\n\n\n\n\n    }\n\n\n\n    return (\n        <>\n            <div className=\"login-form\">\n                <form method=\"post\">\n                    <h2 className=\"text-center\">Reset Password</h2>\n                    <div className=\"form-group\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <span className=\"fa fa-user\"></span>\n                                </span>\n                            </div>\n                            <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"email\" required=\"required\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" onClick={SubmitForm} className=\"btn btn-primary login-btn btn-block\">Reset Pass</button>\n                    </div>\n\n\n                </form>\n\n            </div>\n        </>\n    );\n};\n\nexport default ResetPass;","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/SignUp.jsx",[],"/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/WhatWeDo.jsx",["110","111"],"import React, { useEffect, useState } from 'react';\n//import { Route } from 'react-router';\nimport { useHistory } from 'react-router-dom';\nimport tumpa from '../images/tumpa.jpeg';\n\n\n\nconst WhatWeDo = () => {\n    const history = useHistory();\n    const [userData, setuserData] = useState({});\n    let data;\n\n    const callWhatWeDoPage = async () => {\n        try {\n            const res = await fetch('/what-we-do', {\n                method: \"GET\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                },\n                credentials: \"include\"\n\n            });\n            //console.log(res);\n\n            data = await res.json();\n            console.log(data);\n            setuserData(data);\n            console.log(userData);\n            console.log(userData.email);\n            //console.log(\"what we do \");\n            //console.log(data);\n            if (res.status === 401) {\n                const error = new Error(res.error);\n                throw error;\n            }\n\n        } catch (err) {\n            console.log(err);\n            history.push('/login');\n        }\n\n    }\n\n    useEffect(() => {\n        callWhatWeDoPage();\n\n    }, []);\n\n    return (\n        <>\n\n\n            <form method=\"GET\">\n                <div className=\"row \">\n                    <div className=\"col-4\">\n\n\n                    </div>\n                    <div className=\"col-6\">\n                        <h5>{userData.email}</h5>\n                    </div>\n\n                </div>\n            </form>\n\n\n\n        </>\n    );\n};\n\nexport default WhatWeDo;","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/Logout.jsx",["112"],"import React, { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from './App';\nconst Logout = () => {\n    const { state, dispatch } = useContext(UserContext);\n    const history = useHistory();\n    useEffect(() => {\n        fetch('/logout', {\n            method: \"GET\",\n            headers: {\n                Accept: \"appllication/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            credentials: \"include\"\n        }).then((res) => {\n            dispatch({ type: \"USER1\", payload: false });\n            history.push('/', { replace: true });\n\n            if (res.status !== 200) {\n                const error = new Error(res.error);\n                throw error;\n            }\n\n        }).catch((err) => {\n            console.log(err);\n        });\n    });\n    return (\n        <>\n\n        </>\n    )\n}\n\nexport default Logout;\n","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/CampaignDetails.jsx",["113","114","115","116","117","118"],"import React, { useEffect, useState } from 'react';\n//import { Route } from 'react-router';\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\nimport './CampaignDetails.css';\nimport './Discussion.css';\n\nconst CampaignDetails = () => {\n    const [projectProfile, setProjectProfile] = useState(null);\n    const { id } = useParams();\n\n    const history = useHistory();\n\n\n\n\n    const callcampaigndetails = async () => {\n\n        // fetch(`/projectdetails/${id}`, {\n        //     method: \"GET\",\n        //     headers: {\n        //         Accept: \"application/json\",\n        //         \"Content-Type\": \"application/json\"\n        //     },\n        //     credentials: \"include\"\n\n        // }).then(res => res.json())\n        //     .then(result => {\n        //         //console.log(result)\n\n        //         setUser(result.projectde)\n        //         console.log(user1)\n        //         console.log(result.projectde)\n\n        //     })\n\n\n\n        //try {\n        fetch(`/projectdetails/${id}`, {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            credentials: \"include\"\n        }\n        ).then(res => res.json())\n            .then(result => {\n                console.log(result)\n\n\n                setProjectProfile(result)\n                console.log(projectProfile)\n            })\n    }\n\n    //     });\n    //     //console.log(res);\n\n    //     const data = await res.json();\n\n    //     setUser(data);\n    //     console.log(data);\n    //     //console.log(user1);\n    //     if (res.status !== 201) {\n    //         const error = new Error(res.error);\n    //         throw error;\n    //     }\n\n    // } catch (err) {\n    //     console.log(err);\n    // }\n\n    //}\n\n    useEffect(() => {\n        callcampaigndetails();\n\n    }, []);\n\n\n    return (\n\n        <>\n            {projectProfile ?\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div id=\"row\" className=\"about-section\" style={{ borderBottom: \"2px solid grey\", marginBottom: \"20px\" }}>\n                            <div className=\"about-img\">\n                                <div className=\"img-box inner-shadow\">\n                                    <img src={projectProfile.project.url} className=\"outer-shadow\" alt=\"profile-pic\" />\n                                </div>\n                            </div>\n                            <div className=\"about-info\">\n                                <span style={{ color: \"#ff00ff\", fontSize:\"20px\"}}>{projectProfile.project.category}</span>\n                                <h3 id=\"title\">{projectProfile.project.ctitle}</h3>\n                                <p id=\"tagline-text\">{projectProfile.project.ctagline}</p>\n                                <div style={{ maxWidth: \"400px\", margin: \"0px 0px\" }}>\n                                    <div style={{\n                                        display: \"flex\",\n                                        justifyContent: \"space-in-between\",\n                                        margin: \"10px 5px\",\n\n                                    }}>\n                                        <div>\n                                            <img style={{ width: \"60px\", height: \"60px\", borderRadius: \"30px\", marginRight: \"10px\" }}\n                                                src=\"https://picsum.photos/100\"\n                                            />\n                                        </div>\n                                        <div>\n                                            <span id=\"user-name\">{projectProfile.user.name}</span>\n                                            <p>{projectProfile.project.location}</p>\n\n\n                                        </div>\n                                        \n                                    </div>\n                                </div>\n\n                                <span>koto uthche</span>\n                                <div className=\"progress\" id=\"progressbar\">\n\n                                    <div className=\"progress-bar bg-success\" role=\"progressbar\" style={{ \"width\": \"25%\" }} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">25%</div>\n                                </div>\n                                <div>\n                                    <span>${projectProfile.project.amount} (Goal)</span>\n\n                                    <span style={{ marginLeft: \"320px\" }}>{projectProfile.project.duration} days left</span>\n                                </div>\n\n                                <button className=\"action-button\">Back it</button>\n\n                            </div>\n                        </div>\n\n                        <nav>\n                            <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                                <button className=\"nav-link active\" id=\"nav-home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-home\" type=\"button\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\">Story</button>\n                                <button className=\"nav-link\" id=\"nav-profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-profile\" type=\"button\" role=\"tab\" aria-controls=\"nav-profile\" aria-selected=\"false\">FAQ</button>\n                                <button className=\"nav-link\" id=\"nav-contact-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-contact\" type=\"button\" role=\"tab\" aria-controls=\"nav-contact\" aria-selected=\"false\">Discussion</button>\n                            </div>\n                        </nav>\n                        <div className=\"tab-content\" id=\"nav-tabContent\">\n                            <div className=\"tab-pane fade show active\" id=\"nav-home\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\">\n                                <p style={{ \"height\": \"500px\", fontSize:\"25px\" }}> {projectProfile.project.story} </p>\n                            </div>\n                            <div className=\"tab-pane fade\" id=\"nav-profile\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\">\n                                <div className=\"accordion\" id=\"accordionPanelsStayOpenExample\">\n                                    <div className=\"accordion-item\">\n                                        <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\n                                            <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\" aria-controls=\"panelsStayOpen-collapseOne\">\n                                                {projectProfile.project.faqList[0].question}\n                                            </button>\n                                        </h2>\n                                        <div id=\"panelsStayOpen-collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"panelsStayOpen-headingOne\">\n                                            <div className=\"accordion-body\">\n                                                <strong> {projectProfile.project.faqList[0].answer}</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"accordion-item\">\n                                        <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingTwo\">\n                                            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseTwo\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseTwo\">\n                                                Accordion Item #2\n                                            </button>\n                                        </h2>\n                                        <div id=\"panelsStayOpen-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingTwo\">\n                                            <div className=\"accordion-body\">\n                                                <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"accordion-item\">\n                                        <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingThree\">\n                                            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseThree\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseThree\">\n                                                Accordion Item #3\n                                            </button>\n                                        </h2>\n                                        <div id=\"panelsStayOpen-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingThree\">\n                                            <div className=\"accordion-body\">\n                                                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"tab-pane fade\" id=\"nav-contact\" role=\"tabpanel\" aria-labelledby=\"nav-contact-tab\">\n                                <div className=\"container mt-5\">\n                                    <div className=\"d-flex justify-content-center row\">\n                                        <div className=\"col-md-8\">\n                                            <div className=\"d-flex flex-column comment-section\">\n                                                <div className=\"bg-white p-2\">\n                                                    <div className=\"d-flex flex-row user-info\"><img className=\"rounded-circle\" src=\"https://i.imgur.com/RpzrMR2.jpg\" width=\"40\" />\n                                                        <div className=\"d-flex flex-column justify-content-start ml-2\"><span className=\"d-block font-weight-bold name\">Marry Andrews</span><span className=\"date text-black-50\">Shared publicly - Jan 2020</span></div>\n                                                    </div>\n                                                    <div className=\"mt-2\">\n                                                        <p className=\"comment-text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n                                                    </div>\n                                                </div>\n                                                <div className=\"bg-white\">\n                                                    <div className=\"d-flex flex-row fs-12\">\n                                                        <div className=\"like p-2 cursor\"><i className=\"fa fa-thumbs-o-up\"></i><span className=\"ml-1\">Like</span></div>\n                                                        <div className=\"like p-2 cursor\"><i className=\"fa fa-commenting-o\"></i><span className=\"ml-1\">Comment</span></div>\n                                                        <div className=\"like p-2 cursor\"><i className=\"fa fa-share\"></i><span className=\"ml-1\">Share</span></div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"bg-light p-2\">\n                                                    <div className=\"d-flex flex-row align-items-start\"><img className=\"rounded-circle\" src=\"https://i.imgur.com/RpzrMR2.jpg\" width=\"40\" /><textarea className=\"form-control ml-1 shadow-none textarea\"></textarea></div>\n                                                    <div className=\"mt-2 text-right\"><button className=\"btn btn-primary btn-sm shadow-none\" type=\"button\">Post comment</button><button className=\"btn btn-outline-primary btn-sm ml-1 shadow-none\" type=\"button\">Cancel</button></div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div ></div>\n\n                    </div>\n\n                </div>\n\n                : <h6>Lodding...</h6>}\n\n\n\n        </>\n\n    );\n}\n\nexport default CampaignDetails;\n","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/reducer/UseReducer.jsx",[],"/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/CardView.jsx",["119","120","121"],"import React from 'react';\nimport './StartACampaign.css';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport CampaignDetails from './CampaignDetails';\nconst CardView = (props) => {\n\n\n    return (\n        <div className=\"card\" style={{ \"width\": \"22rem\" }}>\n            <img src={props.item.url} className=\"card-img-top\" alt=\"...\" height=\"200px\" />\n            <div className=\"card-body\" id=\"card-text\">\n                <div>\n                    <h5 className=\"card-title\">{props.item.ctitle}</h5>\n                    <p>{props.item.ctagline}</p>\n                </div>\n                <div className=\"category\">\n                    <span>{props.item.category}</span>\n\n                </div>\n\n                <div className=\"progress\" id=\"progressbar\">\n                    <div className=\"progress-bar bg-success\" role=\"progressbar\" style={{ \"width\": \"25%\" }} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">25%</div>\n                </div>\n                <a href={\"/camp-details/\" + props.item._id} className=\"btn card-button\"> View Details</a>\n\n            </div>\n        </div>\n    );\n}\n\nexport default CardView;\n\n","/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/HeroSection.jsx",[],"/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/Steps/BasicStep.jsx",[],"/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/Steps/Contents.jsx",[],"/home/tumpa/4_2/web/reactapp/demo/crowdfunding/src/components/Steps/Funding.jsx",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":46,"column":8,"nodeType":"128","endLine":46,"endColumn":10,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":6,"column":10,"nodeType":"132","messageId":"133","endLine":6,"endColumn":17},{"ruleId":"126","severity":1,"message":"134","line":202,"column":8,"nodeType":"128","endLine":202,"endColumn":10,"suggestions":"135"},{"ruleId":"130","severity":1,"message":"136","line":7,"column":13,"nodeType":"132","messageId":"133","endLine":7,"endColumn":18},{"ruleId":"130","severity":1,"message":"131","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":17},{"ruleId":"130","severity":1,"message":"137","line":15,"column":11,"nodeType":"132","messageId":"133","endLine":15,"endColumn":18},{"ruleId":"126","severity":1,"message":"138","line":45,"column":8,"nodeType":"128","endLine":45,"endColumn":10,"suggestions":"139"},{"ruleId":"130","severity":1,"message":"140","line":8,"column":20,"nodeType":"132","messageId":"133","endLine":8,"endColumn":28},{"ruleId":"141","severity":1,"message":"142","line":101,"column":45,"nodeType":"143","endLine":101,"endColumn":173},{"ruleId":"130","severity":1,"message":"144","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":37},{"ruleId":"130","severity":1,"message":"131","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":17},{"ruleId":"130","severity":1,"message":"145","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":21},{"ruleId":"130","severity":1,"message":"131","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":17},{"ruleId":"130","severity":1,"message":"136","line":7,"column":13,"nodeType":"132","messageId":"133","endLine":7,"endColumn":18},{"ruleId":"130","severity":1,"message":"140","line":7,"column":20,"nodeType":"132","messageId":"133","endLine":7,"endColumn":28},{"ruleId":"130","severity":1,"message":"146","line":4,"column":8,"nodeType":"132","messageId":"133","endLine":4,"endColumn":13},{"ruleId":"126","severity":1,"message":"147","line":48,"column":8,"nodeType":"128","endLine":48,"endColumn":10,"suggestions":"148"},{"ruleId":"130","severity":1,"message":"136","line":5,"column":13,"nodeType":"132","messageId":"133","endLine":5,"endColumn":18},{"ruleId":"130","severity":1,"message":"131","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":17},{"ruleId":"130","severity":1,"message":"137","line":11,"column":11,"nodeType":"132","messageId":"133","endLine":11,"endColumn":18},{"ruleId":"126","severity":1,"message":"149","line":79,"column":8,"nodeType":"128","endLine":79,"endColumn":10,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":106,"column":45,"nodeType":"143","endLine":108,"endColumn":47},{"ruleId":"151","severity":1,"message":"152","line":194,"column":96,"nodeType":"143","endLine":194,"endColumn":179},{"ruleId":"151","severity":1,"message":"152","line":209,"column":104,"nodeType":"143","endLine":209,"endColumn":187},{"ruleId":"130","severity":1,"message":"131","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":17},{"ruleId":"130","severity":1,"message":"153","line":3,"column":19,"nodeType":"132","messageId":"133","endLine":3,"endColumn":29},{"ruleId":"130","severity":1,"message":"154","line":4,"column":8,"nodeType":"132","messageId":"133","endLine":4,"endColumn":23},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callHomePage'. Either include it or remove the dependency array.","ArrayExpression",["157"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'callLoginPage'. Either include it or remove the dependency array.",["158"],"'state' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callexplorepage'. Either include it or remove the dependency array.",["159"],"'dispatch' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useContext' is defined but never used.","'UserContext' is defined but never used.","'tumpa' is defined but never used.","React Hook useEffect has a missing dependency: 'callWhatWeDoPage'. Either include it or remove the dependency array.",["160"],"React Hook useEffect has a missing dependency: 'callcampaigndetails'. Either include it or remove the dependency array.",["161"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useHistory' is defined but never used.","'CampaignDetails' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [callHomePage]",{"range":"172","text":"173"},"Update the dependencies array to be: [callLoginPage]",{"range":"174","text":"175"},"Update the dependencies array to be: [callexplorepage]",{"range":"176","text":"177"},"Update the dependencies array to be: [callWhatWeDoPage]",{"range":"178","text":"179"},"Update the dependencies array to be: [callcampaigndetails]",{"range":"180","text":"181"},[1176,1178],"[callHomePage]",[5334,5336],"[callLoginPage]",[942,944],"[callexplorepage]",[1237,1239],"[callWhatWeDoPage]",[1871,1873],"[callcampaigndetails]"]